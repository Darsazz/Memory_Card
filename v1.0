from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (QApplication, QWidget, QHBoxLayout, QVBoxLayout, QGroupBox, QButtonGroup, QRadioButton, QPushButton, QLabel)
from random import randint, shuffle

class Question():
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3):
        self.question = question
        self.right_answer = right_answer
        self.wrong1 = wrong1
        self.wrong2 = wrong2
        self.wrong3 = wrong3


spisok = []
spisok.append(Question('Государственный язык Бразилии?', 'Португальский', 'Английский', 'Русский', 'Казахский'))
spisok.append(Question('Сколько в одном гигабайте килобайт?', '1000000', '82400', '1000', '8000'))
spisok.append(Question('Когда появилась игра Майнкрафт?', 'В 2009 году', 'В 2010 году', 'В 2012 году', 'В 2011 году'))


app = QApplication([])
btn_OK = QPushButton('Ответить') 
lb_Question = QLabel('Самый сложный вопрос в мире!')


RadioGroupBox = QGroupBox("Варианты ответов") 
rbtn_1 = QRadioButton('Вариант 1')
rbtn_2 = QRadioButton('Вариант 2')
rbtn_3 = QRadioButton('Вариант 3')
rbtn_4 = QRadioButton('Вариант 4')


RadioGroup = QButtonGroup()
RadioGroup.addButton(rbtn_1)
RadioGroup.addButton(rbtn_2)
RadioGroup.addButton(rbtn_3)
RadioGroup.addButton(rbtn_4)
layout_ans1 = QHBoxLayout()   
layout_ans2 = QVBoxLayout() 
layout_ans3 = QVBoxLayout()
layout_ans2.addWidget(rbtn_1)
layout_ans2.addWidget(rbtn_2)
layout_ans3.addWidget(rbtn_3) 
layout_ans3.addWidget(rbtn_4)


layout_ans1.addLayout(layout_ans2)
layout_ans1.addLayout(layout_ans3) 


RadioGroupBox.setLayout(layout_ans1) 


AnsGroupBox = QGroupBox("Результат теста")
lb_Result = QLabel('прав ты или нет?')
lb_Correct = QLabel('ответ будет тут!')


layout_res = QVBoxLayout()
layout_res.addWidget(lb_Result, alignment=(Qt.AlignLeft | Qt.AlignTop))
layout_res.addWidget(lb_Correct, alignment=Qt.AlignHCenter, stretch=2)
AnsGroupBox.setLayout(layout_res)


layout_line1 = QHBoxLayout()
layout_line2 = QHBoxLayout()
layout_line3 = QHBoxLayout()


layout_line1.addWidget(lb_Question, alignment=(Qt.AlignHCenter | Qt.AlignVCenter))
layout_line2.addWidget(RadioGroupBox)   
layout_line2.addWidget(AnsGroupBox)  
AnsGroupBox.hide() 


layout_line3.addStretch(1)
layout_line3.addWidget(btn_OK, stretch=2) 
layout_line3.addStretch(1)


layout_card = QVBoxLayout()


layout_card.addLayout(layout_line1, stretch=2)
layout_card.addLayout(layout_line2, stretch=8)
layout_card.addStretch(1)
layout_card.addLayout(layout_line3, stretch=1)
layout_card.addStretch(1)
layout_card.setSpacing(5)


def show_result():
    ''' показать панель ответов '''
    RadioGroupBox.hide()
    AnsGroupBox.show()
    btn_OK.setText('Следующий вопрос')


def show_question():
    ''' показать панель вопросов '''
    RadioGroupBox.show()
    AnsGroupBox.hide()
    btn_OK.setText('Ответить')
    RadioGroup.setExclusive(False) 
    rbtn_1.setChecked(False)
    rbtn_2.setChecked(False)
    rbtn_3.setChecked(False)
    rbtn_4.setChecked(False)
    RadioGroup.setExclusive(True) 


answers = [rbtn_1, rbtn_2, rbtn_3, rbtn_4]


def ask(element: Question):
    ''' функция записывает значения вопроса и ответов в соответствующие виджеты, 
    при этом варианты ответов распределяются случайным образом'''
    shuffle(answers)
    answers[0].setText(element.right_answer)
    answers[1].setText(element.wrong1)
    answers[2].setText(element.wrong2)
    answers[3].setText(element.wrong3)
    lb_Question.setText(element.question)
    lb_Correct.setText(element.right_answer) 
    show_question() 


def resultat_otveta(res):
    lb_Result.setText(res)
    show_result()

def proverka_and_vivod():
    if answers[0].isChecked():
        resultat_otveta('Правильно')
        window.score += 1
        print('Статистика всего вопросов:', window.total, 'правильный ответов:', window.score)
        print('Рейтинг:', (window.score/window.total * 100), '%')
    else:
        if answers[1].isChecked() or answers[2].isChecked() or answers[3].isChecked():
            resultat_otveta('Неверно')
            print('Рейтинг:', (window.score/window.total * 100), '%')

def otveti_dryg_za_drygom():  
    window.total += 1
    print('Статистика всего вопросов:', window.total, 'правильный ответов:', window.score)
    peremeshka = randint(0, len(spisok)-1)
    element = spisok[peremeshka]
    ask(element)

def hado_li_pokazivat_libo_proverka_na_vopros():
    if btn_OK.text() == 'Ответить':
        proverka_and_vivod()
    else:
        otveti_dryg_za_drygom()


window = QWidget()
window.setLayout(layout_card)
window.setWindowTitle('Memory Card')
btn_OK.clicked.connect(hado_li_pokazivat_libo_proverka_na_vopros)
window.resize(400, 300)


window.score = 0
window.total = 0
otveti_dryg_za_drygom()


window.show()
app.exec()
